{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACIO,KAAO,OACPC,MAAST,EACTU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAKAI,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OADAc,QAAQC,IAAKf,EAAKU,GAEd,yBAAKM,UAAU,0CACX,yBAAKC,IAAOjB,EAAKkB,IAAQR,IACzB,+BAAMA,EAAN,OCJCS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACP1B,EAAQC,GACP0B,MAAM,SAAAC,GACHX,QAAQC,IAAIU,GACRH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAAEtB,IAEEuB,EDdwBK,CAAc5B,GAAjCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAYpB,OACI,oCACI,wBAAIJ,UAAY,qCAAqClB,GAEpDsB,GAAW,uBAAGJ,UAAY,oCAAf,WACX,yBAAKA,UAAU,aAGRL,EAAOJ,KAAM,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACAmB,IAAOnB,EAAIC,IACPD,UEzBfoB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,WAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAO9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ8C,EAAWtB,KAAK,SAACT,GAAD,OACZ,kBAAC,EAAD,CACI6B,IAAO7B,EACPA,SAAYA,UCjBxCgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ff08e465.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    } \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log('Submit hecho');\n        if( inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type = \"text\"\n                value = {inputValue}\n                onChange = {handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async ( category ) => {\n\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=cOImJzTCT8QPu8hHsDqKuTtClDRwtPi5`;\n\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    console.log( url, title);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n            <img src = {url} alt = { title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n\n    /*useEffect( () => {\n        getGifs(category)\n            .then(setImages);\n    }, [category]) */;\n\n\n   \n\n    //getGifs();\n    return (\n        <>\n            <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\n\n            {loading && <p className = \"animate__animated animate__flash\">Loading</p> }\n             <div className=\"card-grid\">\n                \n                {\n                    images.map(  img => (\n                        <GifGridItem \n                        key = {img.id}\n                        {...img}\n                        />\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category)\n        .then( imgs => {\n            console.log(imgs)\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [ category ])\n\n    return state;\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['vegeta']);\n/* \n    const handleAdd = () => {\n        setCategories( [ ...categories, 'Alex el rey']);\n    } */\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( (category) => (\n                        <GifGrid\n                            key = {category}\n                            category = {category}\n                        />                      \n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}